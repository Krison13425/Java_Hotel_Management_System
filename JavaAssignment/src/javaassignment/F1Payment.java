/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaassignment;

import static java.awt.Color.blue;
import java.io.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.Scanner;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Kriso
 */
public class F1Payment extends javax.swing.JFrame {

Receipt rpt = new Receipt();    
String Delimeter = "@#;";

    public F1Payment() {
        initComponents();
        
        DefaultTableModel model = (DefaultTableModel)JTB.getModel();
        model.setRowCount(0);
        try{
            File Flist = new File("F1Booking.txt");
            Scanner sc1 = new Scanner(Flist);
            while(sc1.hasNextLine()){
                String Line = sc1.nextLine();
                if(!(Line.isEmpty())){
                    String[] wordsinLine = Line.split(Delimeter);
                    model.addRow(wordsinLine);
                }
            }
            sc1.close();
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error Occurred");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LblCN = new javax.swing.JLabel();
        LblCIC = new javax.swing.JLabel();
        LblCCN = new javax.swing.JLabel();
        Txtsearch = new javax.swing.JTextField();
        Btnsearch = new javax.swing.JButton();
        lblCEM = new javax.swing.JLabel();
        TxtCN = new javax.swing.JTextField();
        TxtCCN = new javax.swing.JTextField();
        TxtCEM = new javax.swing.JTextField();
        TxtCIC = new javax.swing.JTextField();
        TxtID = new javax.swing.JTextField();
        TxtRoom = new javax.swing.JTextField();
        TxtDOS = new javax.swing.JTextField();
        LblID = new javax.swing.JLabel();
        LblOD = new javax.swing.JLabel();
        LblRoom = new javax.swing.JLabel();
        LblDOS = new javax.swing.JLabel();
        TxtOD = new javax.swing.JTextField();
        LblTP = new javax.swing.JLabel();
        TxtST = new javax.swing.JTextField();
        TxtRC = new javax.swing.JTextField();
        TxtTT = new javax.swing.JTextField();
        TxtTP = new javax.swing.JTextField();
        LblRC = new javax.swing.JLabel();
        LblST = new javax.swing.JLabel();
        LblTT = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        BtnTable = new javax.swing.JButton();
        BtnBack = new javax.swing.JButton();
        BtnClear = new javax.swing.JButton();
        BtnCalculate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTB = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LblCN.setText("Customer Name :");

        LblCIC.setText("Customer IC  :");

        LblCCN.setText("Customer Phone Number :");

        Txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtsearchActionPerformed(evt);
            }
        });

        Btnsearch.setText("Search");
        Btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnsearchActionPerformed(evt);
            }
        });

        lblCEM.setText("Customer E-mail :");

        TxtCN.setEditable(false);

        TxtCCN.setEditable(false);

        TxtCEM.setEditable(false);

        TxtCIC.setEditable(false);

        TxtID.setEditable(false);

        TxtRoom.setEditable(false);

        TxtDOS.setEditable(false);

        LblID.setText("In Day :");

        LblOD.setText("Out Day  :");

        LblRoom.setText("Room :");

        LblDOS.setText("Day of Stay :");

        TxtOD.setEditable(false);

        LblTP.setText("Total Payment:");

        TxtST.setEditable(false);

        TxtRC.setEditable(false);

        TxtTT.setEditable(false);

        TxtTP.setEditable(false);

        LblRC.setText("Room Charges:");

        LblST.setText("Service Tax (10%)  :");

        LblTT.setText("Tourism Tax:");

        jButton3.setText("Pay");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        BtnTable.setText("Display");
        BtnTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTableActionPerformed(evt);
            }
        });

        BtnBack.setText("Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        BtnClear.setText("Clear");
        BtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnClearActionPerformed(evt);
            }
        });

        BtnCalculate.setText("Calculte");
        BtnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCalculateActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Floor 1");

        JTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Customer Name", "Customer IC", "Customer E-mail", "Customer Contact Number", "In Day", "Out Day", "Room"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTB.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                JTBMouseMoved(evt);
            }
        });
        JTB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTBMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTB);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(138, 138, 138)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(LblCCN)
                                        .addGap(13, 13, 13))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(LblCIC, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(LblCN, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(lblCEM, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(BtnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TxtCN)
                            .addComponent(TxtCCN)
                            .addComponent(TxtCEM, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                            .addComponent(TxtCIC))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LblOD)
                            .addComponent(LblRoom)
                            .addComponent(LblID)
                            .addComponent(LblDOS, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(BtnTable, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TxtID)
                            .addComponent(TxtRoom)
                            .addComponent(TxtDOS)
                            .addComponent(TxtOD, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(LblRC)
                                        .addGap(20, 20, 20))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(LblST)
                                        .addGap(18, 18, 18))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(90, 90, 90)
                                        .addComponent(LblTT))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LblTP)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TxtRC)
                            .addComponent(TxtTT)
                            .addComponent(TxtTP)
                            .addComponent(TxtST, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113)
                        .addComponent(BtnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Btnsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(377, 377, 377))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1210, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Btnsearch)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(LblCN)
                                .addComponent(TxtCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(LblCIC)
                                .addComponent(TxtCIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TxtCCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LblCCN))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TxtCEM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblCEM)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(LblID)
                                .addComponent(TxtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(LblOD)
                                .addComponent(TxtOD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TxtRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LblRoom))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TxtDOS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(LblDOS))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LblRC)
                            .addComponent(TxtRC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LblST)
                            .addComponent(TxtST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LblTT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TxtTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LblTP))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BtnTable)
                        .addComponent(BtnCalculate))
                    .addComponent(jButton3)
                    .addComponent(BtnClear)
                    .addComponent(BtnBack))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("Floor 1 Payment");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnsearchActionPerformed
DefaultTableModel model = (DefaultTableModel)JTB.getModel();
    String search = Txtsearch.getText();
        model.setRowCount(0);
        try{
            File Flist = new File("F1Booking.txt");         
            Scanner sc1 = new Scanner(Flist);
            while(sc1.hasNextLine()){
                String Line = sc1.nextLine();
                if(Line.contains(search)){
                    String[] wordsinLine = Line.split(Delimeter);
                    model.addRow(wordsinLine);
                } 
                } sc1.close();  

        } catch (FileNotFoundException ex) {
           JOptionPane.showMessageDialog(null, "Error Occurred");  
        }        
        
        Txtsearch.setText("");
               
    }//GEN-LAST:event_BtnsearchActionPerformed

    private void BtnTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTableActionPerformed
    
        DefaultTableModel model = (DefaultTableModel)JTB.getModel();
        model.setRowCount(0);
        try{
            File Flist = new File("F1Booking.txt");         
            Scanner sc1 = new Scanner(Flist);
            while(sc1.hasNextLine()){
                String Line = sc1.nextLine();
                if(!(Line.isEmpty())){
                    String[] wordsinLine = Line.split(Delimeter);
                    model.addRow(wordsinLine);
                }
            } sc1.close();
        } catch (FileNotFoundException ex){ 
           JOptionPane.showMessageDialog(null, "Error Occurred");
        }
        
    }//GEN-LAST:event_BtnTableActionPerformed

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
            
        this.setVisible(false);
        new Floor1().setVisible(true);
        
    }//GEN-LAST:event_BtnBackActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    
        if(TxtCN.getText().trim().isEmpty()||TxtCIC.getText().trim().isEmpty()||
           TxtCCN.getText().trim().isEmpty()||TxtCEM.getText().trim().isEmpty()||
           TxtID.getText().trim().isEmpty()||TxtOD.getText().trim().isEmpty()||
           TxtRoom.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "No Value can be Print!!");
            return;
        }
    
    if(TxtDOS.getText().trim().isEmpty()||TxtRC.getText().trim().isEmpty()||
       TxtST.getText().trim().isEmpty()||TxtTT.getText().trim().isEmpty()||
       TxtTP.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Price have not been Calculate!!");
            return;
        }
        
    try{
            
    String CustomerName = TxtCN.getText();
    String CustomerIC = TxtCIC.getText();
    String Room = TxtRoom.getText();
    String DayIn = TxtID.getText();
    String DayOut =  TxtOD.getText();
    String Charges = TxtRC.getText();
    String ServiceTax= TxtST.getText();
    String Tourism = TxtTT.getText();
    String Total = TxtTP.getText();
    rpt.setVisible(true);
    rpt.pack();
    rpt.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    
    rpt.TxtReceipt.setText("                                Hotel Deluna\n");
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText() +"          * * * * * * * * * * * * * * * * * * * * * * * * * * * *         \n");
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText() + "                              Official Receipt\n");
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText() + "          * * * * * * * * * * * * * * * * * * * * * * * * * * * *         \n");
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText() + " ");
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText() + "------------------------------------------------------------------------\n\n");


    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText()+ "Customer Name:                                      " + CustomerName+ "\n");
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText()+ "Customer IC:                                             " + CustomerIC+ "\n");
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText()+ "Check In Day:                                              " + DayIn+ "\n");
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText()+ "Check Out Day:                                           " + DayOut+ "\n");
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText()+ "Room:                                                               " + Room + "\n");
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText() + "------------------------------------------------------------------------\n");
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText()+ "Room Charges Fee:                                       " + Charges + "\n");
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText()+ "Service Tax(10%) Fee:                                    " + ServiceTax + "\n");
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText()+ "Tourism Tax Fee:                                             " + Tourism + "\n\n\n");;
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText()+ "Total Payment:                                               " + Total + "\n\n");
    rpt.TxtReceipt.setText(rpt.TxtReceipt.getText()+ "                            PLEASE COME AGAIN");
    }catch(Exception ex){
    JOptionPane.showMessageDialog(null, "Error Occurred");  
    }

        TxtCN.setText("");
        TxtCIC.setText("");
        TxtCCN.setText("");
        TxtCEM.setText("");
        TxtID.setText("");
        TxtOD.setText("");
        TxtRoom.setText("");
        TxtDOS.setText("");
        TxtRC.setText("");
        TxtST.setText("");
        TxtTT.setText("");
        TxtTP.setText("");
        
         
        
        DefaultTableModel model = (DefaultTableModel)JTB.getModel();
            
            if(JTB.getSelectedRowCount()==1){
                String CustomerNameJTB = String.valueOf(JTB.getValueAt(JTB.getSelectedRow(),0));
                
                String tempFile = "Temp.txt";
                String currentLine;
                String data[];
                try
                {
                    FileWriter fw = new FileWriter(tempFile,true);
                    BufferedWriter bw = new BufferedWriter(fw);
                    PrintWriter pw = new PrintWriter(bw);
                    
                    FileReader fr = new FileReader("F1Booking.Txt");
                    BufferedReader br =new BufferedReader(fr);
                    
                    while((currentLine = br.readLine())!= null)
                    
                    {
                    data = currentLine.split(Delimeter);
                    if(!(data[0].equalsIgnoreCase(CustomerNameJTB)))
                    {
                        pw.println(currentLine);
                    }
                    }
                    pw.flush();
                    fr.close();
                    br.close();
                    fw.close();
                    pw.close();
                    bw.close();
   
                }
                catch (FileNotFoundException ex) {
           JOptionPane.showMessageDialog(null, "Error Occurred");
                
            }   catch (IOException ex) {
                    java.util.logging.Logger.getLogger(Floor1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
                File oldFile = new File ("F1Booking.txt");
                File newFile = new File (tempFile);
            System.out.println(oldFile.exists());
                    if (oldFile.delete()) { 
                System.out.println("Deleted the file: " + oldFile.getName());
                } else {
                System.out.println("Failed to delete the file.");
                    }
                    
                   newFile.renameTo(new File("F1Booking.txt"));
            }
       
            model.setRowCount(0);
        try{
            File Flist = new File("F1Booking.txt");         
            Scanner sc1 = new Scanner(Flist);
            while(sc1.hasNextLine()){
                String Line = sc1.nextLine();
                if(!(Line.isEmpty())){
                    String[] wordsinLine = Line.split(Delimeter);
                    model.addRow(wordsinLine);
                }
            }
            sc1.close();
        } catch (FileNotFoundException ex) {
           JOptionPane.showMessageDialog(null, "Error Occurred");
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void BtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnClearActionPerformed
        
        TxtCN.setText("");
        TxtCIC.setText("");
        TxtCCN.setText("");
        TxtCEM.setText("");
        TxtID.setText("");
        TxtOD.setText("");
        TxtRoom.setText("");
        TxtDOS.setText("");
        TxtRC.setText("");
        TxtST.setText("");
        TxtTT.setText("");
        TxtTP.setText("");
        
    }//GEN-LAST:event_BtnClearActionPerformed

    private void BtnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCalculateActionPerformed
        if(TxtCN.getText().trim().isEmpty()||TxtCIC.getText().trim().isEmpty()||
           TxtCCN.getText().trim().isEmpty()||TxtCEM.getText().trim().isEmpty()||
           TxtID.getText().trim().isEmpty()||TxtOD.getText().trim().isEmpty()||
           TxtRoom.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "No Value can be Count!!");
            return;
        }        
     
        
        String IN = TxtID.getText();
        String Out = TxtOD.getText();
        
        if(!(IN.equals(Out))||!(Out.equals(IN))){
            
        DateTimeFormatter dateformat = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        LocalDate Inday = LocalDate.parse(IN,dateformat);
        LocalDate OutDay = LocalDate.parse(Out,dateformat);

        long DOS = ChronoUnit.DAYS.between(Inday, OutDay);
        
        String calDayofStay = Long.toString(DOS);
        
        int DayofStay = Integer.parseInt(calDayofStay);        
        
        payment Checkout = new payment(IN,Out,DayofStay,350,0.1,10);
               
        TxtDOS.setText(calDayofStay);
        
        String Charges = String.valueOf(Checkout.GetPayment());
        TxtRC.setText("RM "+Charges);
        
        String ServiceTax = String.valueOf(Checkout.GetPaymentSTax());
        TxtST.setText("RM "+ServiceTax);
        
        String TourismTax = String.valueOf(Checkout.GetPaymentTTax());
        TxtTT.setText("RM "+TourismTax);
        
        String TotalPayment = String.valueOf(Checkout.GetTotalPayment());
        TxtTP.setText("RM "+TotalPayment);
        }
        else if((IN.equals(Out))||(Out.equals(IN)))
        {
        payment Checkout = new payment(IN,Out,1,350,0.1,10);
               
        TxtDOS.setText("1");
        
        String Charges = String.valueOf(Checkout.GetPayment());
        TxtRC.setText("RM "+Charges);
        
        String ServiceTax = String.valueOf(Checkout.GetPaymentSTax());
        TxtST.setText("RM "+ServiceTax);
        
        String TourismTax = String.valueOf(Checkout.GetPaymentTTax());
        TxtTT.setText("RM "+TourismTax);
        
        String TotalPayment = String.valueOf(Checkout.GetTotalPayment());
        TxtTP.setText("RM "+TotalPayment);
        }
        
        
        

    }//GEN-LAST:event_BtnCalculateActionPerformed

    private void JTBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTBMouseClicked

        int i = JTB.getSelectedRow();
        TableModel model = JTB.getModel();
        TxtCN.setText(model.getValueAt(i,0).toString());
        TxtCIC.setText(model.getValueAt(i,1).toString());
        TxtCCN.setText(model.getValueAt(i,2).toString());
        TxtCEM.setText(model.getValueAt(i,3).toString());
        TxtID.setText(model.getValueAt(i,4).toString());
        TxtOD.setText(model.getValueAt(i,5).toString());
        TxtRoom.setText(model.getValueAt(i,6).toString());

    }//GEN-LAST:event_JTBMouseClicked

    private void JTBMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTBMouseMoved
        int row = JTB.rowAtPoint(evt.getPoint());
      if (row > -1)
      {
         JTB.clearSelection();
         JTB.setRowSelectionInterval(row, row);
      }
      else
      {
         JTB.setSelectionBackground(blue);
      }
   
    }//GEN-LAST:event_JTBMouseMoved

    private void TxtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtsearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F1Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F1Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F1Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F1Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new F1Payment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnCalculate;
    private javax.swing.JButton BtnClear;
    private javax.swing.JButton BtnTable;
    private javax.swing.JButton Btnsearch;
    private javax.swing.JTable JTB;
    private javax.swing.JLabel LblCCN;
    private javax.swing.JLabel LblCIC;
    private javax.swing.JLabel LblCN;
    private javax.swing.JLabel LblDOS;
    private javax.swing.JLabel LblID;
    private javax.swing.JLabel LblOD;
    private javax.swing.JLabel LblRC;
    private javax.swing.JLabel LblRoom;
    private javax.swing.JLabel LblST;
    private javax.swing.JLabel LblTP;
    private javax.swing.JLabel LblTT;
    private javax.swing.JTextField TxtCCN;
    private javax.swing.JTextField TxtCEM;
    private javax.swing.JTextField TxtCIC;
    private javax.swing.JTextField TxtCN;
    private javax.swing.JTextField TxtDOS;
    private javax.swing.JTextField TxtID;
    private javax.swing.JTextField TxtOD;
    private javax.swing.JTextField TxtRC;
    private javax.swing.JTextField TxtRoom;
    private javax.swing.JTextField TxtST;
    private javax.swing.JTextField TxtTP;
    private javax.swing.JTextField TxtTT;
    private javax.swing.JTextField Txtsearch;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCEM;
    // End of variables declaration//GEN-END:variables
}
