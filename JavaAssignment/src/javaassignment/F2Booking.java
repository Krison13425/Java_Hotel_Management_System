/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaassignment;

import java.awt.event.KeyEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.regex.*;
import java.io.*;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Kriso
 */
public class F2Booking extends javax.swing.JFrame {
String Delimeter = "@#;";


private String[] room = {"F2R1","F2R2","F2R3","F2R4","F2R5","F2R6","F2R7","F2R8","F2F9","F2F10"};

 private void addCombobox(Date date, Date outdate) throws ParseException{
     
F2CbRoom.removeAllItems();
     
    if(date == null || outdate == null ){
       return;
       }
            
     for(int count = 0; count<room.length; count++ ){
     
         
     List<Booking> bookingList = new ArrayList<Booking>();
     
     boolean available=true;

     try{
            File Flist = new File("F2Booking.txt");         
            Scanner sc1 = new Scanner(Flist);
            
            while(sc1.hasNextLine()){
               
               String Line = sc1.nextLine();
               String[] wordsinLine = Line.split(Delimeter);
               
               bookingList.add(new Booking(wordsinLine[0],wordsinLine[1],wordsinLine[2],wordsinLine[3],wordsinLine[4],wordsinLine[5],wordsinLine[6]));
                
               for (int i = 0; i  < bookingList.size(); i++) {
                  

           Date starting = new SimpleDateFormat("dd-MM-yyyy").parse(bookingList.get(i).GetInday());
           Date ending = new SimpleDateFormat("dd-MM-yyyy").parse(bookingList.get(i).GetOutday());
           
           
           
            if(bookingList.get(i).GetRoom().equals(room[count])){
                
                if(!date.before(starting) && !outdate.after(ending)) available = false;
                if(!date.after(starting) &&!outdate.before(starting)&&!date.equals(outdate)) available = false;
                if(!date.after(starting) && !outdate.before(ending)&&!date.equals(outdate)) available = false;
                if(!date.after(ending) && !outdate.before(ending)&&!date.equals(outdate)) available = false;
             
                
            }
            }
            }
            if(available){
            F2CbRoom.addItem(room[count]);
            }
            sc1.close();
        
     }catch (FileNotFoundException ex) {
           JOptionPane.showMessageDialog(null, "Error Occurred");  
                }
 }
 }
    public F2Booking() {
        initComponents();
        
        F2DPID.getDateEditor().addPropertyChangeListener(new PropertyChangeListener() {
       
           public void propertyChange(PropertyChangeEvent e) {
            if ("date".equals(e.getPropertyName())) {
            
            try {
                addCombobox((Date) e.getNewValue(), F2DPOD.getDate());
            } catch (ParseException ex) {
                Logger.getLogger(F2Booking.class.getName()).log(Level.SEVERE, null, ex);
            }}
        }
    });
       F2DPOD.getDateEditor().addPropertyChangeListener(new PropertyChangeListener() {
       
           public void propertyChange(PropertyChangeEvent e) {
          if ("date".equals(e.getPropertyName())) {
            try {
                addCombobox(F2DPID.getDate(), (Date)e.getNewValue());
            }
            catch (ParseException ex) {
                Logger.getLogger(F2Booking.class.getName()).log(Level.SEVERE, null, ex);
            }
          }
            
            
        }
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LblCN1 = new javax.swing.JLabel();
        LblEM = new javax.swing.JLabel();
        LblCCN = new javax.swing.JLabel();
        LblValidCN = new javax.swing.JLabel();
        TxtF2CN = new javax.swing.JTextField();
        TxtF2EM = new javax.swing.JTextField();
        F2DPID = new com.toedter.calendar.JDateChooser();
        F2DPOD = new com.toedter.calendar.JDateChooser();
        LblRoom = new javax.swing.JLabel();
        BtnBack = new javax.swing.JButton();
        F2CbRoom = new javax.swing.JComboBox<>();
        LblValidEM = new javax.swing.JLabel();
        BtnCreate = new javax.swing.JButton();
        TxtF2CCN = new javax.swing.JTextField();
        LblCCN1 = new javax.swing.JLabel();
        LblCN = new javax.swing.JLabel();
        LblCCN2 = new javax.swing.JLabel();
        LblIC = new javax.swing.JLabel();
        TxtF2CIC = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LblCN1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        LblCN1.setText("F2 Booking");

        LblEM.setText("Customer E-mail:");

        LblCCN.setText("Customer Contact Number:");

        LblValidCN.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        LblValidCN.setForeground(java.awt.Color.red);

        TxtF2CN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtF2CNKeyReleased(evt);
            }
        });

        TxtF2EM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtF2EMKeyReleased(evt);
            }
        });

        F2DPID.setDateFormatString("dd-MM-yyyy");

        F2DPOD.setDateFormatString("dd-MM-yyyy");

        LblRoom.setText("Room:");

        BtnBack.setText("Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        F2CbRoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Room-" }));

        LblValidEM.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        LblValidEM.setForeground(java.awt.Color.red);

        BtnCreate.setText("Create");
        BtnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCreateActionPerformed(evt);
            }
        });

        TxtF2CCN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtF2CCNKeyPressed(evt);
            }
        });

        LblCCN1.setText("In Day:");

        LblCN.setText("Customer Name :");

        LblCCN2.setText("Out Day:");

        LblIC.setText("Customer IC :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(202, Short.MAX_VALUE)
                .addComponent(LblCN1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(206, 206, 206))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(LblRoom)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(LblCCN1)
                                            .addComponent(LblCCN2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(F2DPID, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(155, 155, 155)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(F2CbRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(F2DPOD, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(173, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LblCCN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TxtF2CCN, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LblIC)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TxtF2CIC, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LblEM, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TxtF2EM, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LblCN, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TxtF2CN, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LblValidCN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LblValidEM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(BtnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(BtnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(LblCN1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LblCN)
                            .addComponent(TxtF2CN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LblValidCN, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LblIC)
                            .addComponent(TxtF2CIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LblCCN)
                            .addComponent(TxtF2CCN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LblEM)
                            .addComponent(TxtF2EM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(LblValidEM, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LblCCN1)
                    .addComponent(F2DPID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(LblCCN2))
                    .addComponent(F2DPOD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LblRoom)
                    .addComponent(F2CbRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnCreate)
                    .addComponent(BtnBack))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("Floor 2 Create Booking");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TxtF2CNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtF2CNKeyReleased
        String PATTERN ="^[a-zA-Z-]{0,30}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(TxtF2CN.getText());
        if(!match.matches())
        {
            LblValidCN.setText("Naming Structure Incorrect !!");
        }
        else{
            LblValidCN.setText("");
        }
    }//GEN-LAST:event_TxtF2CNKeyReleased

    private void TxtF2EMKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtF2EMKeyReleased
        String PATTERN ="^[a-zA-Z0-9]{0,30}[@][a-zA-Z0-9]{0,10}[.][a-z]{0,3}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(TxtF2EM.getText());
        if(!match.matches())
        {
            LblValidEM.setText("E-mail Structure Incorrect !!");
        }
        else{
            LblValidEM.setText("");
        }
    }//GEN-LAST:event_TxtF2EMKeyReleased

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        TxtF2CN.setText("");
        TxtF2CIC.setText("");
        TxtF2CCN.setText("");
        TxtF2EM.setText("");
        F2DPID.cleanup();
        F2DPOD.cleanup();
        F2CbRoom.removeAllItems();

        this.setVisible(false);
        new Floor2().setVisible(true);
    }//GEN-LAST:event_BtnBackActionPerformed

    private void BtnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCreateActionPerformed

        if (TxtF2CN.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Booking Detials incomplete Please insert Customer Name","Warning!!",JOptionPane.WARNING_MESSAGE);
        return;
        }
        
         if (TxtF2CIC.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Booking Detials incomplete Please insert Customer IC or Password","Warning!!",JOptionPane.WARNING_MESSAGE);
        return;
        }
         
          if (TxtF2CCN.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Booking Detials incomplete Please insert Customer Contact Number","Warning!!",JOptionPane.WARNING_MESSAGE);
        return;
        }
           if (TxtF2EM.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Booking Detials incomplete Please insert Customer Email","Warning!!",JOptionPane.WARNING_MESSAGE);
        return;
        }
           if (F2DPID.getDate()== null)
        {
            JOptionPane.showMessageDialog(null, "Booking Detials incomplete Please select a CheckIn Date","Warning!!",JOptionPane.WARNING_MESSAGE);
        return;
        }
           
           if (F2DPOD.getDate()== null)
        {
            JOptionPane.showMessageDialog(null, "Booking Detials incomplete Please select a CheckOut Date","Warning!!",JOptionPane.WARNING_MESSAGE);
        return;
        }
           
           if (F2CbRoom.getSelectedItem()=="-Room-")
        {
            JOptionPane.showMessageDialog(null, "Booking Detials incomplete Please select a room","Warning!!",JOptionPane.WARNING_MESSAGE);
        return;
        }
        
        DateFormat d = new SimpleDateFormat("dd-MM-yyyy");
        String output = d.format(new Date());
        try {
            if(F2DPID.getDate().before(d.parse(output))||F2DPOD.getDate().before(F2DPID.getDate())){
                JOptionPane.showMessageDialog(null, "Please insert the right date!!");
                return;
            }
        } catch (ParseException ex) {
            Logger.getLogger(F1Booking.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if (!LblValidCN.getText().trim().isEmpty())
        {
        JOptionPane.showMessageDialog(null, "Please insert correct Naming format!!","Warning!!",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (!LblValidEM.getText().trim().isEmpty())
        {
        JOptionPane.showMessageDialog(null, "Please insert correct Email format!!","Warning!!",JOptionPane.WARNING_MESSAGE);
            return;
        }

        SimpleDateFormat date = new SimpleDateFormat("dd-MM-yyyy");
        String CN = TxtF2CN.getText();
        String CIC = TxtF2CIC.getText();
        String CC = TxtF2CCN.getText();
        String CEM = TxtF2EM.getText();
        String InDay = date.format(F2DPID.getDate());
        String OutDay = date.format(F2DPOD.getDate());
        String Room = String.valueOf(F2CbRoom.getSelectedItem());

        Booking Createbooking = new Booking(CN,CIC,CC,CEM,InDay,OutDay,Room);

        if(Createbooking.save2())
        {
            JOptionPane.showMessageDialog(null, "Booking Created Successfully");
            this.setVisible(false);
            new Floor2().setVisible(true);
        }

    }//GEN-LAST:event_BtnCreateActionPerformed

    private void TxtF2CCNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtF2CCNKeyPressed
        try {
        String Contact = TxtF2CCN.getText();
        int length = Contact.length(); 
        char c = evt.getKeyChar();
        
        if (c >= '0' && c <= '9') {
            
            if (length < 10) {
                
                TxtF2CCN.setEditable(true);
                
            } else {
                TxtF2CCN.setEditable(false);
            }
        } else {
           
            if (c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE) {
               
                TxtF2CCN.setEditable(true);
            } else {
                TxtF2CCN.setEditable(false);
            }
        }
        }catch(NumberFormatException ex){
        }
    }//GEN-LAST:event_TxtF2CCNKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F2Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F2Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F2Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F2Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new F2Booking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnCreate;
    private javax.swing.JComboBox<String> F2CbRoom;
    private com.toedter.calendar.JDateChooser F2DPID;
    private com.toedter.calendar.JDateChooser F2DPOD;
    private javax.swing.JLabel LblCCN;
    private javax.swing.JLabel LblCCN1;
    private javax.swing.JLabel LblCCN2;
    private javax.swing.JLabel LblCN;
    private javax.swing.JLabel LblCN1;
    private javax.swing.JLabel LblEM;
    private javax.swing.JLabel LblIC;
    private javax.swing.JLabel LblRoom;
    private javax.swing.JLabel LblValidCN;
    private javax.swing.JLabel LblValidEM;
    private javax.swing.JTextField TxtF2CCN;
    private javax.swing.JTextField TxtF2CIC;
    private javax.swing.JTextField TxtF2CN;
    private javax.swing.JTextField TxtF2EM;
    // End of variables declaration//GEN-END:variables
}
